<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="${daoPackage}.${Entity}Mapper" >
  <resultMap id="BaseResultMap" type="${entityPackage}.${Entity}">
    <id column="${entityId}" property="${entity}Id" jdbcType="BIGINT" />
    #foreach($tableDao in ${tableDaoList})
    <result column="$tableDao.getColumn()" jdbcType="$tableDao.getJDBCType()" property="$tableDao.getReplaceColumn()" />
	#end
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ${entityId}
    #foreach($tableDao in ${tableDaoList})
    ,$tableDao.getColumn()
	#end
  </sql>
  <!--  
  <sql id="Part_Column_List" >
    ${entityId}
    #foreach($tableDao in ${partTableDaoList})
    ,$tableDao.getColumn()
	#end
  </sql>
  -->
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="${entityPackage}.${Entity}Example" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ${tableEntity}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <!--  
  <select id="selectPartByExample" resultType="map" parameterType="${entityPackage}.${Entity}Example" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Part_Column_List" />
    from ${tableEntity}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectInputByExample" resultType="map" parameterType="map" >
    select
    <if test="distinct" >
      distinct
    </if>
    #{inputCloumn}
    from ${tableEntity}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ${tableEntity}
    where ${entityId} = #{${entity}Id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ${tableEntity}
    where ${entityId} = #{${entity}Id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="${entityPackage}.${Entity}Example" >
    delete from ${tableEntity}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="${entityPackage}.${Entity}" >
    insert into ${tableEntity} (${entityId}
    #foreach($tableDao in ${tableDaoList})
    $tableDao.getColumn(),
	#end
      )
    values (#{${entity}Id,jdbcType=BIGINT}
    #foreach($tableDao in ${tableDaoList})
    #{$tableDao.getReplaceColumn(),jdbcType=$tableDao.getJDBCType()},
	#end
      )
  </insert>
  <insert id="insertSelective" parameterType="${entityPackage}.${Entity}" >
    insert into ${tableEntity}
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="${entity}Id != null" >
        ${entityId},
      </if>
      #foreach($tableDao in ${tableDaoList})
      <if test="$tableDao.getReplaceColumn() != null" >
        $tableDao.getColumn(),
      </if>
	  #end
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="${entity}Id != null" >
        #{${entity}Id,jdbcType=BIGINT},
      </if>
      #foreach($tableDao in ${tableDaoList})
      <if test="$tableDao.getReplaceColumn() != null" >
        #{$tableDao.getReplaceColumn(),jdbcType=$tableDao.getJDBCType()},
      </if>
	  #end
    </trim>
  </insert>
  <select id="countByExample" parameterType="${entityPackage}.${Entity}Example" resultType="java.lang.Integer" >
    select count(*) from ${tableEntity}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ${tableEntity}
    <set >
      <if test="record.entityId != null" >
        ${entityId} = #{record.${entity}Id,jdbcType=BIGINT}
      </if>
      #foreach($tableDao in ${tableDaoList})
       <if test="record.$tableDao.getReplaceColumn() != null" >
        ,$tableDao.getColumn() = #{record.$tableDao.getReplaceColumn(),jdbcType=$tableDao.getJDBCType()}
      </if>
	  #end
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ${tableEntity}
    set ${entityId} = #{record.${entity}Id,jdbcType=BIGINT}
     #foreach($tableDao in ${tableDaoList})
     	,$tableDao.getColumn() = #{record.$tableDao.getReplaceColumn(),jdbcType=jdbcType=$tableDao.getJDBCType()}
	 #end
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="${entityPackage}.${Entity}" >
    update ${tableEntity}
    <set >
     ${entityId} = #{${entity}Id,jdbcType=BIGINT}
     #foreach($tableDao in ${tableDaoList})
     <if test="$tableDao.getReplaceColumn() != null" >
        ,$tableDao.getColumn() = #{$tableDao.getReplaceColumn(),jdbcType=$tableDao.getJDBCType()}
     </if>
	 #end
    </set>
    where ${entityId} = #{${entity}Id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="${entityPackage}.${Entity}" >
    update ${tableEntity}
    set
    ${entityId} = #{${entity}Id,jdbcType=BIGINT} 
     #foreach($tableDao in ${tableDaoList})
     	,$tableDao.getColumn() = #{$tableDao.getReplaceColumn(),jdbcType=$tableDao.getJDBCType()} 
	 #end
    where ${entityId} = #{${entity}Id,jdbcType=BIGINT}
  </update>
</mapper>